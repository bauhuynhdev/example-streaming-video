WEBVTT

1
00:00:01.950 --> 00:00:05.180
[Music]

2
00:00:05.359 --> 00:00:07.359
welcome to this hands-on lesson in this

3
00:00:07.359 --> 00:00:09.519
lesson we're going to go into aws

4
00:00:09.519 --> 00:00:11.679
secrets manager have a look at the

5
00:00:11.679 --> 00:00:14.240
console create a secret and then we're

6
00:00:14.240 --> 00:00:15.920
going to go to the command line as well

7
00:00:15.920 --> 00:00:17.600
and see how we can work with secrets

8
00:00:17.600 --> 00:00:20.080
manager using the cli so i'm on the

9
00:00:20.080 --> 00:00:22.640
secrets manager console here let's click

10
00:00:22.640 --> 00:00:25.119
on store a new secret

11
00:00:25.119 --> 00:00:26.960
and straight away we have a few

12
00:00:26.960 --> 00:00:29.199
decisions to make so what's the secret

13
00:00:29.199 --> 00:00:31.359
type is it going to be credentials for

14
00:00:31.359 --> 00:00:35.040
an rds database document tb a redshift

15
00:00:35.040 --> 00:00:37.600
cluster or some other type of database

16
00:00:37.600 --> 00:00:40.320
or any other type of secret like an api

17
00:00:40.320 --> 00:00:43.520
key and an oar token and so on

18
00:00:43.520 --> 00:00:46.000
now if you do choose the rds database

19
00:00:46.000 --> 00:00:48.160
you do actually need to have a database

20
00:00:48.160 --> 00:00:50.000
and we don't have one so what we're

21
00:00:50.000 --> 00:00:52.160
going to do is choose other type of

22
00:00:52.160 --> 00:00:53.199
secret

23
00:00:53.199 --> 00:00:55.199
and we're simply going to create our

24
00:00:55.199 --> 00:00:57.440
secret as a key value pair

25
00:00:57.440 --> 00:00:58.640
so for example

26
00:00:58.640 --> 00:01:01.359
maybe it's a password for our

27
00:01:01.359 --> 00:01:03.520
administrative account so i'm going to

28
00:01:03.520 --> 00:01:05.760
put in admin and then i'm just going to

29
00:01:05.760 --> 00:01:07.119
say my

30
00:01:07.119 --> 00:01:09.360
password now as you can see it's going

31
00:01:09.360 --> 00:01:11.760
to use an encryption key and by default

32
00:01:11.760 --> 00:01:14.880
it's going to use an aws manage key so

33
00:01:14.880 --> 00:01:17.920
you know that because it says aws slash

34
00:01:17.920 --> 00:01:20.159
and then secrets manager

35
00:01:20.159 --> 00:01:22.159
so you can choose other keys if you want

36
00:01:22.159 --> 00:01:25.040
to as long as secrets manager does have

37
00:01:25.040 --> 00:01:27.360
the permissions to use that key i'm

38
00:01:27.360 --> 00:01:30.000
going to use the default key here

39
00:01:30.000 --> 00:01:31.600
and click on next

40
00:01:31.600 --> 00:01:33.360
just give it a name i'm just going to

41
00:01:33.360 --> 00:01:35.200
call this my credentials

42
00:01:35.200 --> 00:01:37.680
you can then optionally add tags

43
00:01:37.680 --> 00:01:40.400
you can edit the resource permissions

44
00:01:40.400 --> 00:01:41.920
and you can choose to replicate your

45
00:01:41.920 --> 00:01:43.840
secret if you want to as well

46
00:01:43.840 --> 00:01:45.759
we'll click on next and this is where we

47
00:01:45.759 --> 00:01:48.079
have the configuration for automatic

48
00:01:48.079 --> 00:01:50.479
rotation so remember secrets manager

49
00:01:50.479 --> 00:01:53.280
does do automatic rotation but it's only

50
00:01:53.280 --> 00:01:55.360
going to work out of the box for certain

51
00:01:55.360 --> 00:01:56.719
databases

52
00:01:56.719 --> 00:01:59.680
so if i enable automatic rotation here

53
00:01:59.680 --> 00:02:01.600
for my custom secret

54
00:02:01.600 --> 00:02:03.920
i'm going to need to choose a lambda

55
00:02:03.920 --> 00:02:05.680
rotation function and of course i don't

56
00:02:05.680 --> 00:02:07.680
have one i would need to write my own

57
00:02:07.680 --> 00:02:10.800
lambda code that rotates the secret

58
00:02:10.800 --> 00:02:13.040
so i'm just going to disable rotation

59
00:02:13.040 --> 00:02:14.480
click on next

60
00:02:14.480 --> 00:02:15.840
scroll down

61
00:02:15.840 --> 00:02:18.080
and we can see some sample code here for

62
00:02:18.080 --> 00:02:20.480
using our secret in an application and

63
00:02:20.480 --> 00:02:22.640
i'm just going to choose store and it's

64
00:02:22.640 --> 00:02:25.280
as simple as that we now have our secret

65
00:02:25.280 --> 00:02:29.040
stored in aws secrets manager

66
00:02:29.040 --> 00:02:31.040
now if we come in here we can see some

67
00:02:31.040 --> 00:02:32.720
information the encryption key that's

68
00:02:32.720 --> 00:02:36.560
being used the name it has its own arn

69
00:02:36.560 --> 00:02:38.480
and we can retrieve the secret value if

70
00:02:38.480 --> 00:02:40.480
we wish to as well

71
00:02:40.480 --> 00:02:41.920
so of course you've got to be careful

72
00:02:41.920 --> 00:02:43.680
who has permissions to view this

73
00:02:43.680 --> 00:02:45.280
information

74
00:02:45.280 --> 00:02:46.959
now that's it for the console what i

75
00:02:46.959 --> 00:02:49.200
want to do now is go to the command line

76
00:02:49.200 --> 00:02:50.560
and we're going to see how we can work

77
00:02:50.560 --> 00:02:52.560
with the command line now you'll find

78
00:02:52.560 --> 00:02:54.400
this file in the course downloads

79
00:02:54.400 --> 00:02:56.800
obviously it's in the code directory aws

80
00:02:56.800 --> 00:02:58.560
sequence manager and it's called secrets

81
00:02:58.560 --> 00:03:01.360
manager cli commands and these are the

82
00:03:01.360 --> 00:03:03.360
commands that we're going to use

83
00:03:03.360 --> 00:03:05.599
so i'm simply going to copy the command

84
00:03:05.599 --> 00:03:07.680
one by one to my clipboard and on a

85
00:03:07.680 --> 00:03:09.680
command line here i'm going to type in

86
00:03:09.680 --> 00:03:12.879
aws secrets manager list secrets

87
00:03:12.879 --> 00:03:14.480
and of course we did create a secret

88
00:03:14.480 --> 00:03:17.440
before so we can see the arn the name of

89
00:03:17.440 --> 00:03:20.000
that secret the last change date access

90
00:03:20.000 --> 00:03:22.400
date and some more information so let's

91
00:03:22.400 --> 00:03:23.920
quit out of there and go and see what

92
00:03:23.920 --> 00:03:25.599
the next command is

93
00:03:25.599 --> 00:03:27.280
so the next command is to actually

94
00:03:27.280 --> 00:03:29.120
create a secret so we're going to run

95
00:03:29.120 --> 00:03:32.480
aws secrets manager create secret we

96
00:03:32.480 --> 00:03:33.840
give it a name it's going to be called

97
00:03:33.840 --> 00:03:36.319
dev db secret and then we can give it a

98
00:03:36.319 --> 00:03:38.560
description and then the actual secret

99
00:03:38.560 --> 00:03:40.640
string so this is the actual secret

100
00:03:40.640 --> 00:03:42.400
we're trying to store

101
00:03:42.400 --> 00:03:44.239
so i'm going to copy all of this to my

102
00:03:44.239 --> 00:03:45.440
clipboard

103
00:03:45.440 --> 00:03:47.360
and back on the command line

104
00:03:47.360 --> 00:03:48.239
that's

105
00:03:48.239 --> 00:03:50.400
hit enter and that should have created

106
00:03:50.400 --> 00:03:51.840
the secret for us

107
00:03:51.840 --> 00:03:53.920
so now if i go back up to my previous

108
00:03:53.920 --> 00:03:56.560
command to list secrets i can now see

109
00:03:56.560 --> 00:03:59.120
that i have two so i have my credentials

110
00:03:59.120 --> 00:04:01.760
and dev db secret now what if i actually

111
00:04:01.760 --> 00:04:04.239
want to retrieve the secret value from

112
00:04:04.239 --> 00:04:06.400
the command line well i can do that with

113
00:04:06.400 --> 00:04:09.120
the secrets manager get secret value

114
00:04:09.120 --> 00:04:11.040
command and again we just need to

115
00:04:11.040 --> 00:04:14.319
identify the secret by id which is

116
00:04:14.319 --> 00:04:16.560
actually the name of the secret so back

117
00:04:16.560 --> 00:04:19.040
in the command line let's put that in

118
00:04:19.040 --> 00:04:21.040
and it actually retrieves the secret

119
00:04:21.040 --> 00:04:23.600
string and we can see it in plain text

120
00:04:23.600 --> 00:04:25.600
here on the screen another command you

121
00:04:25.600 --> 00:04:28.800
can use is describe secret so let's copy

122
00:04:28.800 --> 00:04:31.280
this to our clipboards

123
00:04:31.280 --> 00:04:33.600
paste that one in and hit enter

124
00:04:33.600 --> 00:04:35.440
now what you'll notice is this provides

125
00:04:35.440 --> 00:04:36.880
quite a bit of information but it

126
00:04:36.880 --> 00:04:38.720
doesn't actually retrieve the secret

127
00:04:38.720 --> 00:04:40.960
value so this is useful when you want to

128
00:04:40.960 --> 00:04:42.800
know information about the secret but

129
00:04:42.800 --> 00:04:44.960
not the actual secret itself

130
00:04:44.960 --> 00:04:48.000
the next command is to update the secret

131
00:04:48.000 --> 00:04:50.000
so we can run this command and what's

132
00:04:50.000 --> 00:04:51.520
going to happen is it's going to change

133
00:04:51.520 --> 00:04:53.759
the secret value that's stored so if you

134
00:04:53.759 --> 00:04:56.160
needed to rotate your secret this is a

135
00:04:56.160 --> 00:04:58.639
way that you could do that using the cli

136
00:04:58.639 --> 00:05:00.639
of course you'd be able to use the api

137
00:05:00.639 --> 00:05:02.800
and there'll be a very similar option

138
00:05:02.800 --> 00:05:05.280
for how you can update the secret using

139
00:05:05.280 --> 00:05:06.960
the api that you could then put into a

140
00:05:06.960 --> 00:05:09.120
lambda function code to actually perform

141
00:05:09.120 --> 00:05:10.560
that for you

142
00:05:10.560 --> 00:05:12.479
so here we're running update secret we

143
00:05:12.479 --> 00:05:14.160
give it the secret id the name of the

144
00:05:14.160 --> 00:05:17.440
secret and then the new secret string

145
00:05:17.440 --> 00:05:20.400
so i've pasted that onto my screen

146
00:05:20.400 --> 00:05:24.479
that has now applied the new secret so

147
00:05:24.479 --> 00:05:26.560
let's run the get secret value command

148
00:05:26.560 --> 00:05:28.320
again

149
00:05:28.320 --> 00:05:30.080
and we should now see that we have the

150
00:05:30.080 --> 00:05:32.240
new secret string returned

151
00:05:32.240 --> 00:05:33.680
so that's it for this lesson i just

152
00:05:33.680 --> 00:05:35.600
wanted to show you how to use secrets

153
00:05:35.600 --> 00:05:38.400
manager from the cli of course in many

154
00:05:38.400 --> 00:05:40.960
instances you'll be using the api in

155
00:05:40.960 --> 00:05:42.880
code to actually work with secrets

156
00:05:42.880 --> 00:05:44.720
manager now the last thing i'm going to

157
00:05:44.720 --> 00:05:47.199
do here is delete my secrets the first

158
00:05:47.199 --> 00:05:49.600
one is the dev db secret so i'm going to

159
00:05:49.600 --> 00:05:52.880
copy this command to my clipboard

160
00:05:52.880 --> 00:05:55.919
paste that in and that will be deleted

161
00:05:55.919 --> 00:05:57.600
and then i'm simply going to go back and

162
00:05:57.600 --> 00:06:00.400
delete my credentials as well

163
00:06:00.400 --> 00:06:03.120
and that's both of my secrets deleted

164
00:06:03.120 --> 00:06:04.800
so i hope that was useful i will see you

165
00:06:04.800 --> 00:06:05.920
in the next lesson

166
00:06:05.920 --> 00:06:16.999
[Music]

